---
- name: Deploy Docker container on Ubuntu EC2
  hosts: ec2
  become: yes
  vars:
    docker_image: esraa114/depi_petclinic:latest 
    container_name: "petclinic_app"
    host_port: 5050
    container_port: 8080
    venv_path: "/opt/ansible-venv"
  tasks:
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Install dependencies for Docker installation
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg
          - lsb-release
        state: present

    - name: Install Python3 and venv
      apt:
        name:
          - python3
          - python3-venv
        state: present

    - name: Create a Python virtual environment
      command: python3 -m venv {{ venv_path }}
      args:
        creates: "{{ venv_path }}"

    - name: Set Python interpreter variable
      set_fact:
        ansible_python_interpreter: "{{ venv_path }}/bin/python"

    - name: Install Docker SDK for Python in the virtual environment
      command: "{{ venv_path }}/bin/pip install docker"
      
    - name: Download Docker installation script
      command: curl -fsSL https://get.docker.com -o get-docker.sh
      args:
        creates: "get-docker.sh"

    - name: Run Docker installation script
      command: sh get-docker.sh
      args:
        chdir: "{{ ansible_env.HOME }}"  # Specify a directory to run the command

    - name: Ensure Docker is running
      service:
        name: docker
        state: started
        enabled: true

    - name: Pull an image
      community.docker.docker_image:
        name: "{{ docker_image }}"
        source: pull
        pull:
          platform: amd64
        
    - name: Stop and remove any existing container
      community.docker.docker_container:
        name: "{{ container_name }}"
        state: absent

    - name: Run the new Docker container
      community.docker.docker_container:
        name: "{{ container_name }}"
        image: "{{ docker_image }}"
        state: started
        ports:
          - "{{ host_port }}:{{ container_port }}"
